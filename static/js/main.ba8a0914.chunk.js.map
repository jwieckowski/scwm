{"version":3,"sources":["components/Menu/Menu.tsx","components/Menu/index.tsx","components/Layout/index.tsx","components/Layout/Layout.tsx","components/MyContainer/index.tsx","components/MyContainer/MyContainer.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","components/CriteriaSelection/index.tsx","components/CriteriaSelection/CriteriaSelection.tsx","subscribers/FPS.js","subscribers/weights.js","components/Weights/Methods/FPS/FPS.tsx","components/Weights/Methods/FPS/index.tsx","subscribers/RM.js","components/Weights/Methods/RM/RM.tsx","components/Weights/Methods/RM/index.tsx","subscribers/SMART.js","components/Weights/Methods/SMART/SMART.tsx","components/Weights/Methods/SMART/index.tsx","subscribers/RWM.js","components/Weights/Methods/RWM/RWM.tsx","components/Weights/Methods/RWM/index.tsx","subscribers/AHP.js","components/Weights/Methods/AHP/Matrix/index.tsx","components/Weights/Methods/AHP/Matrix/Matrix.tsx","components/Weights/Methods/AHP/AHP.tsx","components/Weights/Methods/AHP/index.tsx","components/Weights/Rating/index.tsx","components/Weights/Rating/Rating.tsx","components/Weights/Modal/Modal.tsx","components/Weights/Modal/index.tsx","components/Weights/Weights.tsx","components/Weights/index.tsx","components/Statistics/index.tsx","components/Statistics/Statistics.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","flexGrow","Menu","classes","location","useLocation","useState","value","setValue","useEffect","pathname","Paper","className","Tabs","indicatorColor","textColor","centered","to","style","textDecoration","color","Tab","label","Layout","children","Container","maxWidth","backgroundColor","width","height","MyContainer","overflow","Dashboard","Grid","margin","paddingTop","display","flexDirection","justifyContent","alignItems","Typography","variant","textAlign","lineHeight","CriteriaSelection","criteria","setCriteria","name","setName","criteriaAll","map","crit","status","description","FormControl","component","padding","FormGroup","TextField","onChange","event","target","marginBottom","container","FormControlLabel","control","Checkbox","checked","e","id","Button","size","marginTop","onClick","preventDefault","body","axios","post","then","res","window","alert","catch","err","Store","createStore","initialState","weights","Array","fill","sum","actions","changeWeights","index","setState","getState","copy","calculateSum","reduce","s","val","parseInt","validateInput","some","weight","useFPS","createHook","activeStep","methodsRatings","weightsCorrect","modalVisible","message","nextStep","prevStep","changeRatings","changeWeightsCorrectness","setModalVisibility","state","postFormData","data","a","messsage","useWeightsState","WEIGHTS_MESSAGE","FPS","setMessage","Box","Object","keys","key","paddingRight","type","onChangeWeight","borderTop","fontWeight","targetSum","length","Set","useRM","RM","useSMART","SMART","useRWM","RWM","Matrix","criteriaAmount","matrix","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","col","TableBody","row","index2","toFixed","initialMatrix","i","initialPairs","j","push","pairs","compareValue","currentPair","betterCriterion","comparePair","setCompareValue","setBetterCriterion","criterion","useAHP","WEIGHTS_DICT","AHP","paddingBottom","Select","MenuItem","idx","Rating","activeIndex","ratings","setRating","newRating","position","top","left","transform","bgcolor","border","boxShadow","p","Modal","handleClose","open","onClose","sx","mt","methods","weightsDescription","Weights","fps","rm","smart","rwm","ahp","Stepper","method","Step","StepLabel","disabled","marginRight","flex","Statistics","results","setResults","get","counter","forEach","d","entries","includes","countVotes","console","log","CircularProgress","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba8a0914.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Paper,\r\n  Tabs,\r\n  Tab\r\n} from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface URL {\r\n  [index: string]: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [value, setValue] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    const urls: URL = {\r\n      '/scwm': 0,\r\n      '/scwm/prestudy': 1,\r\n      '/scwm/weights': 2,\r\n      '/scwm/statistics': 3\r\n    }\r\n    setValue(urls[location.pathname] || 0)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Link\r\n          to='/scwm'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Strona główna\" />\r\n        </Link>\r\n        <Link\r\n          to='/scwm/prestudy'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Wybór kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/scwm/weights'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Istotność kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/scwm/statistics'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Statystyki\" />\r\n        </Link>\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import Menu from './Menu';\r\n\r\nexport default Menu","import Layout from './Layout'\r\n\r\nexport default Layout","import React, { ReactChildren, ReactChild } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Menu from '../Menu';\r\n\r\ninterface LayoutChildren {\r\n    children: ReactChildren | ReactChild\r\n}\r\n\r\nexport default function Layout({ children }: LayoutChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{backgroundColor: '#dcdcdc', width: '100%', height: '100vh'}}>\r\n            <Menu />\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import MyContainer from './MyContainer';\r\n\r\nexport default MyContainer;","import React, { ReactChildren, ReactChild, ReactFragment } from 'react'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\ninterface ContainerChildren {\r\n    children: ReactChildren | ReactChild | ReactChildren[] | ReactChild[] | ReactFragment\r\n}\r\n\r\n\r\nexport default function MyContainer({ children }: ContainerChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{width: '100%', height: '90%', overflow: 'auto'}}>\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport {\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport MyContainer from '../MyContainer'\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <MyContainer>\r\n            <Grid style={{width: '80%', margin: 'auto', paddingTop: '40px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n                <Typography variant='h4' style={{textAlign: 'center'}}>\r\n                    Subiektywne metody wyznaczania wag kryteriów\r\n                </Typography>\r\n                <Typography variant='h5' style={{textAlign: 'center', paddingTop: '50px', lineHeight: '25px'}}>\r\n                    Strona została poświęcona ankietom do badań nad moją pracą magisterską.\r\n                </Typography>\r\n                <Typography style={{textAlign: 'center', paddingTop: '50px', lineHeight: '25px'}}>\r\n                    Pierwsza ankieta dotyczy wyboru kryteriów, które osoba badana brałaby pod uwagę przy wybieraniu lokalizacji mieszkania w Szczecinie.\r\n                </Typography>\r\n                <Typography style={{textAlign: 'center', paddingTop: '50px', lineHeight: '25px'}}>\r\n                    Druga ankieta zawiera 5 kroków, a każdy z nich polega na ustaleniu istotności kryteriów w problemie postępując według instrukcji dla każdej z metod zawartej w kolejnych krokach.\r\n                </Typography>\r\n                <Typography style={{textAlign: 'center', paddingTop: '50px', lineHeight: '40px'}}>\r\n                    Otrzymane wyniki mają zostać wykorzystane do wyznaczania wag kryteriów w problemie. Uwzględnione są dwa przypadki badawcze.\r\n                    Jeden z nich dotyczy wyznaczenia atrakcyjności lokalizacji mieszkalnych dla wag obliczonych dla każdego eksperta z osobna. Następnie wyniki te są uśredniane i na tej podstawie obliczany jest końcowy ranking atrakcyjności miejsc.\r\n                    Drugi przypadek to podejście, w którym najpierw uśredniane są wagi dla kryteriów, po czym wykonywana jest ocena miejsc. <br/>\r\n                </Typography>\r\n                <Typography style={{textAlign: 'center', paddingTop: '40px', lineHeight: '40px'}}>\r\n                    Badanie ma na celu pokazać różnice wynikające z użycia różnych metod do wyznaczania wag kryteriów na podstawie subiektywnych odczuć.\r\n                </Typography>\r\n            </Grid>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import CriteriaSelection from './CriteriaSelection'\r\n\r\nexport default CriteriaSelection","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    FormControl,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    TextField,\r\n    Typography,\r\n    Grid,\r\n    Button\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n    description: string\r\n    status: boolean\r\n}\r\n\r\nconst SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\n// const SERVER_URL = 'http://localhost:5000'\r\n\r\nexport default function CriteriaSelection() {\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n    const [name, setName] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            const obj = { ...crit, status: false}\r\n            return obj\r\n        }))\r\n    }, [])\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: number) => {\r\n        setCriteria(criteria.map(crit => crit.id === id ? {...crit, status: !crit.status } : crit))\r\n    };\r\n\r\n    const handleSubmit = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.preventDefault();\r\n        if (name === '') {\r\n            window.alert('Pole \"imię\" musi być wypełnione');\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            name,\r\n            ...criteria.map(crit => ({ id: crit.id, status: crit.status}))\r\n        }\r\n\r\n        axios.post(`${SERVER_URL}/add-prestudy`, body)\r\n            .then((res) => {\r\n                window.alert(`Dane zostały ${res.status === 201 ? 'zapisane': 'zaktualizowane'}`)\r\n            })\r\n            .catch((err: Error) => {\r\n                window.alert('Wystąpił błąd przy zapisywaniu danych')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MyContainer>\r\n            <Typography variant='h5' style={{margin: '50px 10%'}}>{criteriaAll.description}</Typography>\r\n             <FormControl component=\"fieldset\" style={{padding: '40px', width: '100%'}}>\r\n                <FormGroup style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', width: '100%'}}>\r\n                    <TextField variant=\"outlined\" label=\"Imię\" onChange={handleInputChange} style={{ marginBottom: '20px'}}/>\r\n                    {\r\n                        criteria?.map(crit => {\r\n                            return (\r\n                                <Grid container style={{ margin: '10px 0'}} key={crit.id}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={crit.status} onChange={(e) => handleChange(e, crit.id)} name={crit.name} color={'primary'}/>\r\n                                        }\r\n                                        label={crit.name}\r\n                                        style={{width: '100%'}}\r\n                                    />\r\n                                    <Typography variant='body2' style={{color: '#494949'}}>{crit.description}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </FormGroup>\r\n                <Button\r\n                    variant='contained'\r\n                    size='medium'\r\n                    color='primary'\r\n                    style={{marginTop: '20px', padding: '10px 5px'}}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    PRZEŚLIJ\r\n                </Button>\r\n            </FormControl>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n    sum: 0,\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    calculateSum:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        const sum = getState().weights.reduce((s, val) => parseInt(s + val));\r\n        setState({\r\n          sum: sum,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 4;\r\n        if (getState().weights.some((weight) => weight < 0)) return 3;\r\n\r\n        // 0 - equal 100\r\n        // 1 - too low\r\n        // 2 - too much\r\n        return getState().sum === 100 ? 0 : getState().sum < 100 ? 1 : 2;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"FPS\",\r\n});\r\n\r\nexport const useFPS = createHook(Store);\r\n","import { createStore, createHook } from \"react-sweet-state\";\r\nimport axios from \"axios\";\r\n\r\nconst SERVER_URL = \"https://infinite-dusk-14350.herokuapp.com\";\r\n// const SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    activeStep: 0,\r\n    methodsRatings: Array(5).fill(0),\r\n    weightsCorrect: Array(5).fill(false),\r\n    name: \"\",\r\n    modalVisible: false,\r\n    message: \"\",\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    nextStep:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        setState({\r\n          activeStep: getState().activeStep + 1,\r\n        });\r\n      },\r\n    prevStep:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        if (getState().activeStep === 0) return;\r\n        setState({\r\n          activeStep: getState().activeStep - 1,\r\n        });\r\n      },\r\n    changeRatings:\r\n      (value) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().methodsRatings];\r\n        copy[getState().activeStep] = value;\r\n        setState({\r\n          methodsRatings: copy,\r\n        });\r\n      },\r\n    changeWeightsCorrectness:\r\n      (status) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weightsCorrect];\r\n        copy[getState().activeStep] = status === 0 ? true : false;\r\n\r\n        setState({\r\n          weightsCorrect: copy,\r\n        });\r\n      },\r\n    setName:\r\n      (name) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          name: name,\r\n        });\r\n      },\r\n    setModalVisibility:\r\n      (state) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          modalVisible: state,\r\n        });\r\n      },\r\n    postFormData:\r\n      (data) =>\r\n      async ({ setState, getState }) => {\r\n        const body = {\r\n          ...data,\r\n          name: getState().name,\r\n        };\r\n\r\n        axios\r\n          .post(`${SERVER_URL}/weights`, body)\r\n          .then((res) => {\r\n            setState({\r\n              messsage: `Dane zostały ${\r\n                res.status === 201 ? \"zapisane\" : \"zaktualizowane\"\r\n              }`,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            setState({\r\n              messsage: \"Wystąpił błąd przy zapisywaniu danych\",\r\n            });\r\n          });\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"weights\",\r\n});\r\n\r\nexport const useWeightsState = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useFPS } from '../../../../subscribers/FPS'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Suma punktów jest poprawna',\r\n    1: 'Suma punktów jest mniejsza niż 100',\r\n    2: 'Suma punktów jest większa niż 100',\r\n    3: 'Nie można przypisać ujemnych punktów do kryterium',\r\n    4: ''\r\n}\r\n\r\nexport default function FPS({ criteria, description }: Props) {\r\n    const [{ weights, sum }, { changeWeights, calculateSum, validateInput }] = useFPS()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        calculateSum()\r\n\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                        <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', marginTop: '20px', borderTop: '2px solid grey'}}>Suma wag: {sum} </Typography>\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import FPS from './FPS';\r\n\r\nexport default FPS;","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n    targetSum: 55,\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 3;\r\n\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 1;\r\n\r\n        const sum = getState().weights.reduce((s, val) => parseInt(s + val));\r\n        return sum === getState().targetSum ? 0 : 2;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"RM\",\r\n});\r\n\r\nexport const useRM = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useRM } from '../../../../subscribers/RM'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Ranking jest zdefiniowany poprawnie',\r\n    1: 'Ranking nie może zawierać pozycji remisowych',\r\n    2: 'Ranking powinien być zdefiniowany za pomocą kolejnych liczb od 1 do 10 i nie pomijać żadnych wartości',\r\n    3: ''\r\n}\r\n\r\nexport default function RM({ criteria, description }: Props) {\r\n    const [{ weights }, { changeWeights, validateInput }] = useRM()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n                <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import RM from './RM';\r\n\r\nexport default RM","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 3;\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 2;\r\n        if (getState().weights.some((weight) => weight < 10)) return 1;\r\n\r\n        return 0;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"SMART\",\r\n});\r\n\r\nexport const useSMART = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useSMART } from '../../../../subscribers/SMART'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Wagi są zdefiniowane poprawnie',\r\n    1: 'Najmniejsza wartość powinna wynosić 10',\r\n    2: 'Wagi nie powinny sie powtarzać',\r\n    3: ''\r\n}\r\n\r\nexport default function SMART({ criteria, description }: Props) {\r\n    const [{ weights }, { changeWeights, validateInput } ] = useSMART()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import SMART from './SMART';\r\n\r\nexport default SMART","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 4;\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 3;\r\n        if (getState().weights.some((weight) => weight % 10 !== 0)) return 2;\r\n        if (getState().weights.some((weight) => weight < 10)) return 1;\r\n\r\n        return 0;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"RWM\",\r\n});\r\n\r\nexport const useRWM = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useRWM } from '../../../../subscribers/RWM'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Wagi są zdefiniowane poprawnie',\r\n    1: 'Najmniejsza wartość powinna wynosić 10',\r\n    2: 'Wagi powininy być zdefiniowane za pomocą kolejnych wielokrotności 10',\r\n    3: 'Wagi nie powinny sie powtarzać',\r\n    4: '',\r\n}\r\n\r\nexport default function RWM({ criteria, description }: Props) {\r\n    const [{ weights }, {changeWeights, validateInput }] = useRWM()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import RWM from './RWM';\r\n\r\nexport default RWM","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst initialMatrix = Array(10)\r\n  .fill(0)\r\n  .map(() => new Array(10).fill(0));\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  initialMatrix[i][i] = 1;\r\n}\r\n\r\nconst initialPairs = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  for (let j = 0; j < 10; j++) {\r\n    if (j > i) {\r\n      initialPairs.push([i, j]);\r\n    }\r\n  }\r\n}\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    criteriaAmount: 10,\r\n    matrix: initialMatrix,\r\n    pairs: initialPairs,\r\n    compareValue: \"\",\r\n    currentPair: 0,\r\n    betterCriterion: \"\",\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    comparePair:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        const value =\r\n          +getState().betterCriterion === 0\r\n            ? getState().compareValue\r\n            : 1 / getState().compareValue;\r\n\r\n        let copy = [...getState().matrix];\r\n        copy[getState().pairs[getState().currentPair][0]][\r\n          getState().pairs[getState().currentPair][1]\r\n        ] = value;\r\n        copy[getState().pairs[getState().currentPair][1]][\r\n          getState().pairs[getState().currentPair][0]\r\n        ] = 1 / value.toFixed(3);\r\n\r\n        setState({\r\n          matrix: copy,\r\n          currentPair: getState().currentPair + 1,\r\n          compareValue: \"\",\r\n          betterCriterion: \"\",\r\n        });\r\n      },\r\n    setCompareValue:\r\n      (value) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          compareValue: value,\r\n        });\r\n      },\r\n    setBetterCriterion:\r\n      (criterion) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          betterCriterion: criterion,\r\n        });\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"AHP\",\r\n});\r\n\r\nexport const useAHP = createHook(Store);\r\n","import Matrix from './Matrix'\r\n\r\nexport default Matrix","import * as React from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@material-ui/core';\r\n\r\ninterface props {\r\n  criteriaAmount: number\r\n  matrix: number[][]\r\n}\r\n\r\nexport default function Matrix({criteriaAmount, matrix}: props) {\r\n  return (\r\n    <TableContainer component={Paper} style={{margin: '2% 0'}}>\r\n      <Table style={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Kryteria</TableCell>\r\n            {Array(criteriaAmount).fill(0).map((col, index) => (\r\n              <TableCell component=\"th\" key={index}>\r\n                C{index+1}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Array(criteriaAmount).fill(0).map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n            >\r\n              <TableCell>\r\n                C{index+1}\r\n              </TableCell>\r\n              {Array(criteriaAmount).fill(0).map((col, index2) => (\r\n                <TableCell component=\"th\" key={index+index2}>\r\n                  {matrix[index][index2].toFixed(2)}\r\n                </TableCell>\r\n              ))}\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import react, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    MenuItem,\r\n    FormControl\r\n} from '@material-ui/core';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nimport Matrix from './Matrix'\r\nimport { useAHP } from '../../../../subscribers/AHP'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface DICT {\r\n    [key: number]: string\r\n}\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Można porównać parę',\r\n    1: 'Ważniejsze kryterium powinno być wybrane',\r\n    2: 'Relacja pomiędzy kryteriami powinna być wybrana',\r\n    3: ''\r\n}\r\n\r\nconst WEIGHTS_DICT: DICT = {\r\n    1: 'Równoważne',\r\n    2: 'Pomiędzy słabo a równoważne',\r\n    3: 'Słabo preferowane',\r\n    4: 'Pomiędzy słabo a silnie',\r\n    5: 'Silnie preferowane',\r\n    6: 'Pomiędzy silnie a bardzo silnie',\r\n    7: 'Bardzo silnie preferowane',\r\n    8: 'Pomiędzy bardzo silnie a ekstremalnie',\r\n    9: 'Ekstremalnie preferowane'\r\n}\r\n\r\nexport default function AHP({ criteria, description }: Props) {\r\n    const [{ criteriaAmount, matrix, pairs, compareValue, currentPair, betterCriterion }, { comparePair, setCompareValue, setBetterCriterion }] = useAHP()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    const handlePairComparison = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault()\r\n\r\n        if (compareValue === \"\") {\r\n            setMessage(WEIGHTS_MESSAGE[2])\r\n            return\r\n        }\r\n\r\n        comparePair()\r\n        if (currentPair === 44) {\r\n            changeWeightsCorrectness(0)\r\n        }\r\n        setMessage(WEIGHTS_MESSAGE[3])\r\n    }\r\n\r\n    const handleCriteriaChange = (event: SelectChangeEvent) => {\r\n        setMessage(WEIGHTS_MESSAGE[3])\r\n        setBetterCriterion(+event.target.value);\r\n    };\r\n\r\n    const handleValueChange = (event: SelectChangeEvent) => {\r\n        if (betterCriterion === \"\") {\r\n            setMessage(WEIGHTS_MESSAGE[1])\r\n            return\r\n        }\r\n        setMessage(WEIGHTS_MESSAGE[0])\r\n        setCompareValue(+event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            <Typography style={{padding: '10px 0'}}>Kryteria</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                        <Typography style={{width: '70%', paddingRight: '20px'}}>C{index+1} - {criteria[parseInt(key)].name}</Typography>\r\n                    </Box>\r\n                )\r\n            })}\r\n            <Matrix\r\n              criteriaAmount={criteriaAmount}\r\n              matrix={matrix}\r\n            />\r\n            {\r\n                currentPair !== 45 &&\r\n                (<Box style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', width: '100%'}}>\r\n                    <Box style={{width: '100%', display: 'flex', justifyContent: 'center', paddingBottom: '10px'}}>\r\n                        <Typography style={{width: \"50%\", textAlign: 'center'}}>C{pairs[currentPair][0]+1} - {criteria[pairs[currentPair][0]].name}</Typography>\r\n                        <Typography style={{width: \"50%\", textAlign: 'center'}}>C{pairs[currentPair][1]+1} - {criteria[pairs[currentPair][1]].name}</Typography>\r\n                    </Box>\r\n                    <Box style={{width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-evenly', paddingBottom: '10px'}}>\r\n                        <Typography>Ważniejsze kryterium</Typography>\r\n                        <FormControl style={{width: '100px'}}>\r\n                            <Select\r\n                                id=\"criteria-AHP-value\"\r\n                                value={betterCriterion}\r\n                                onChange={handleCriteriaChange}\r\n                            >\r\n                                <MenuItem value={0}>C{pairs[currentPair][0]+1}</MenuItem>\r\n                                <MenuItem value={1}>C{pairs[currentPair][1]+1}</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Typography>Relacja</Typography>\r\n                        <FormControl style={{width: '150px'}}>\r\n                            <Select\r\n                                id=\"criteria-AHP-value\"\r\n                                value={compareValue}\r\n                                onChange={handleValueChange}\r\n                            >\r\n                                {\r\n                                    Object.keys(WEIGHTS_DICT).map((key: string, idx: number) => {\r\n                                        return (\r\n                                            <MenuItem key={idx} value={+key}>{WEIGHTS_DICT[+key]}</MenuItem>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box>\r\n                        <Button\r\n                            variant='contained'\r\n                            size='medium'\r\n                            color='primary'\r\n                            style={{margin: '0 10px', padding: '10px 5px'}}\r\n                            onClick={handlePairComparison}\r\n                        >\r\n                            DALEJ\r\n                        </Button>\r\n                    </Box>\r\n                </Box>)\r\n            }\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: (betterCriterion === \"\" || compareValue === \"\") ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import AHP from './AHP';\r\n\r\nexport default AHP","import Rating from './Rating';\r\n\r\nexport default Rating","import react, { Dispatch, SetStateAction } from 'react';\r\nimport {\r\n    Box,\r\n    Rating,\r\n    Typography\r\n } from '@mui/material';\r\n\r\ninterface Props {\r\n    activeIndex: number\r\n    ratings: number[]\r\n    setRating: Dispatch<SetStateAction<number>>\r\n}\r\n\r\nexport default function MyRating({ activeIndex, ratings, setRating }: Props) {\r\n\r\n  const handleChange = (event: react.SyntheticEvent<Element, Event>, newRating: number | null) => {\r\n    event.preventDefault();\r\n\r\n    if (!newRating) return\r\n\r\n    setRating(newRating)\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"legend\">Ocena trudności korzystania z metody</Typography>\r\n      <Typography>1 gwiazdka - trudna, 5 gwiazdek - łatwa</Typography>\r\n      <Rating\r\n        name=\"method-rating\"\r\n        value={ratings[activeIndex]}\r\n        onChange={handleChange}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import react, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport { useWeightsState } from '../../../subscribers/weights'\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface Props {\r\n  description: string\r\n}\r\n\r\nexport default function BasicModal({ description }: Props) {\r\n  const [{ modalVisible, name }, { setModalVisibility, setName }] = useWeightsState()\r\n  const [message, setMessage] = useState<string>('')\r\n\r\n  const handleClose = () => {\r\n    if (name === '') {\r\n      setMessage('Należy uzupełnić imię')\r\n      return\r\n    }\r\n    setModalVisibility(false);\r\n  }\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setName(event.target.value)\r\n      setMessage('')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={modalVisible}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Wstęp przed wypełnieniem formularza\r\n          </Typography>\r\n          <Typography style={{ marginTop: '10px', color: 'red' }}>{message}</Typography>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Imię\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n            style={{ marginBottom: '20px'}}\r\n          />\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {description}\r\n          </Typography>\r\n          <Button style={{ marginTop: '10px'}} onClick={handleClose}>\r\n            Zamknij\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import Modal from './Modal'\r\n\r\nexport default Modal","import react, { useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Button,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport FPS from './Methods/FPS'\r\nimport RM from './Methods/RM'\r\nimport SMART from './Methods/SMART'\r\nimport RWM from './Methods/RWM'\r\nimport AHP from './Methods/AHP'\r\nimport Rating from './Rating'\r\nimport Modal from './Modal'\r\n\r\nimport { useWeightsState } from '../../subscribers/weights';\r\nimport { useFPS } from '../../subscribers/FPS';\r\nimport { useRM } from '../../subscribers/RM';\r\nimport { useSMART } from '../../subscribers/SMART';\r\nimport { useRWM } from '../../subscribers/RWM';\r\nimport { useAHP } from '../../subscribers/AHP';\r\nimport weightsDescription from '../../weights_description.json'\r\n\r\ninterface methodsComponents {\r\n  [key: number]: JSX.Element\r\n}\r\n\r\nconst methods: methodsComponents = {\r\n  0: <FPS criteria={weightsDescription.criteria} description={weightsDescription.methods[0].description}/>,\r\n  1: <RM criteria={weightsDescription.criteria} description={weightsDescription.methods[1].description}/>,\r\n  2: <SMART criteria={weightsDescription.criteria} description={weightsDescription.methods[2].description}/>,\r\n  3: <RWM criteria={weightsDescription.criteria} description={weightsDescription.methods[3].description}/>,\r\n  4: <AHP criteria={weightsDescription.criteria} description={weightsDescription.methods[4].description}/>\r\n}\r\n\r\nexport default function Weights() {\r\n  const [{ activeStep, methodsRatings, weightsCorrect, message }, { nextStep, prevStep, changeRatings, setModalVisibility, postFormData }] = useWeightsState()\r\n\r\n  const [fps, ] = useFPS()\r\n  const [rm, ] = useRM()\r\n  const [smart, ] = useSMART()\r\n  const [rwm, ] = useRWM()\r\n  const [ahp, ] = useAHP()\r\n\r\n  useEffect(() => {\r\n    setModalVisibility(true)\r\n  }, [])\r\n\r\n  const handleNext = () => {\r\n    if (methodsRatings[activeStep] === 0 || !weightsCorrect[activeStep]) return\r\n    nextStep()\r\n\r\n    if (activeStep === weightsDescription.methods.length - 1) {\r\n\r\n      const body = {\r\n        'fps': fps.weights,\r\n        'rm': rm.weights,\r\n        'smart': smart.weights,\r\n        'rwm': rwm.weights,\r\n        'ahp': ahp.matrix,\r\n        'rating': methodsRatings\r\n      }\r\n\r\n      postFormData(body)\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    prevStep()\r\n  };\r\n\r\n  return (\r\n    <Box style={{ width: '100%', height: '100%', paddingTop: '15px', overflow: 'auto' }}>\r\n      <Modal description={weightsDescription.description} />\r\n      <Stepper activeStep={activeStep}>\r\n        {weightsDescription.methods.map((method, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: {\r\n            optional?: React.ReactNode;\r\n          } = {};\r\n          return (\r\n            <Step key={method.id} {...stepProps}>\r\n              <StepLabel {...labelProps}>{index+1}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === weightsDescription.methods.length ? (\r\n        <Box style={{ width: '60%', margin: '0 auto', paddingTop: '20px'}}>\r\n          <Typography>{message}</Typography>\r\n          <Typography style={{ marginTop: 2, marginBottom: 1 }}>\r\n            Wszystkie kroki wypełnione. Dziękuje Wam serdecznie za pomoc. Mam nadzieję,\r\n            że to wszystko, czego będę od Was potrzebował. Jeszcze raz dziękuję, jak obliczę wyniki\r\n            to na pewno się z Wami podzielę.\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <Box style={{width: '90%', margin: '0 5%', marginBottom: '100px'}}>\r\n          {methods[activeStep]}\r\n          <Box style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n            <Rating\r\n              activeIndex={activeStep}\r\n              ratings={methodsRatings}\r\n              setRating={changeRatings}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            {\r\n              methodsRatings[activeStep] === 0 && !weightsCorrect[activeStep]\r\n                ? 'Należy wypełnić wagi i ocenić metodę'\r\n                : methodsRatings[activeStep] === 0\r\n                  ? 'Należy ocenić metodę'\r\n                  : !weightsCorrect[activeStep]\r\n                    ? 'Należy wypełnić wagi'\r\n                    : 'Można przejść do nastepnego kroku'\r\n            }\r\n            </Box>\r\n          <Box style={{ display: 'flex', flexDirection: 'row', paddingTop: 2 }}>\r\n            <Button\r\n              color=\"inherit\"\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              style={{ marginRight: 1 }}\r\n            >\r\n              Wstecz\r\n            </Button>\r\n            <Box style={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleNext}>\r\n                {activeStep === weightsDescription.methods.length - 1 ? 'Prześlij' : 'Dalej'}\r\n              </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import Weights from './Weights'\r\n\r\nexport default Weights","import Statistics from './Statistics'\r\n\r\nexport default Statistics","import React, { useState, useEffect } from 'react'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    CircularProgress\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface Criterion {\r\n    id: number\r\n    status: boolean\r\n}\r\n\r\ninterface CriteriaResults {\r\n    _id: string\r\n    data: Criterion[]\r\n    name: string\r\n}\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\nconst SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\n// const SERVER_URL = 'http://localhost:5000'\r\n\r\n\r\nexport default function Statistics() {\r\n    const [results, setResults] = useState<{} | any>({});\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n\r\n    const countVotes = (data: CriteriaResults[] | []) => {\r\n        const counter: { [name: string]: number} = {};\r\n        data.forEach(d => {\r\n            for (const [key, crit] of Object.entries(d.data)) {\r\n                if (key === 'name') continue\r\n\r\n                if (Object.keys(counter).includes(key)) {\r\n                    counter[key] += crit.status === true ? 1 : 0\r\n                } else {\r\n                    counter[key] = crit.status === true ? 1 : 0\r\n                }\r\n            }\r\n        })\r\n        return counter\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            return { id: crit.id, name: crit.name }\r\n        }))\r\n\r\n        axios.get(`${SERVER_URL}/criteria-selection`)\r\n        .then((res: AxiosResponse) => {\r\n            setResults(countVotes(res.data))\r\n        })\r\n        .catch((err: Error) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <MyContainer>\r\n            {\r\n                Object.keys(results).length === 0 ?\r\n                    <Grid style={{width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        <CircularProgress size='40px' />\r\n                    </Grid>\r\n                :\r\n                    <>\r\n                        <Grid style={{width: '100%', display: 'flex', justifyContent: 'center', paddingTop: '50px'}}>\r\n                            <Typography variant='h5'>Wyniki wyboru kryteriów</Typography>\r\n                        </Grid>\r\n                        <Grid style={{display: 'flex', flexDirection: 'column', width: '100%', padding: \"2% 10%\"}}>\r\n                            {\r\n                                criteria?.map(crit => {\r\n                                    return (\r\n                                        <Grid style={{display: 'flex', width: '100%', justifyContent: 'center', padding: \"4px 0\"}}>\r\n                                            <Typography style={{width: '70%', marginRight: '10px'}}>{crit.name}</Typography>\r\n                                            <Typography>{results[crit.id]}</Typography>\r\n                                        </Grid>\r\n                                )\r\n                            })}\r\n                        </Grid>\r\n                    </>\r\n            }\r\n        </MyContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout';\r\nimport Dashboard from './components/Dashboard';\r\nimport CriteriaSelection from './components/CriteriaSelection';\r\nimport Weights from './components/Weights';\r\nimport Statistics from './components/Statistics';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/scwm' exact component={Dashboard} />\r\n          <Route path='/scwm/prestudy' component={CriteriaSelection} />\r\n          <Route path='/scwm/weights' component={Weights} />\r\n          <Route path='/scwm/statistics' component={Statistics} />\r\n          <Redirect to='/scwm' />\r\n        </Switch>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}