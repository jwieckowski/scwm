{"version":3,"sources":["components/Menu/Menu.tsx","components/Menu/index.tsx","components/Layout/index.tsx","components/Layout/Layout.tsx","components/MyContainer/index.tsx","components/MyContainer/MyContainer.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","components/CriteriaSelection/index.tsx","components/CriteriaSelection/CriteriaSelection.tsx","components/Weights/index.tsx","components/Weights/Weights.tsx","components/Statistics/index.tsx","components/Statistics/Statistics.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","flexGrow","Menu","classes","location","useLocation","useState","value","setValue","useEffect","pathname","Paper","className","Tabs","indicatorColor","textColor","centered","to","style","textDecoration","color","Tab","label","Layout","children","Container","maxWidth","backgroundColor","width","height","MyContainer","overflow","Dashboard","CriteriaSelection","criteria","setCriteria","name","setName","criteriaAll","map","crit","status","Typography","variant","margin","description","FormControl","component","padding","FormGroup","display","flexDirection","justifyContent","TextField","onChange","event","target","marginBottom","Grid","container","FormControlLabel","control","Checkbox","checked","e","id","Button","size","marginTop","onClick","preventDefault","body","axios","post","then","res","window","alert","catch","err","Weights","Statistics","results","setResults","get","data","counter","forEach","d","Object","entries","key","keys","includes","countVotes","console","log","paddingTop","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2acc4404.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface URL {\r\n  [index: string]: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [value, setValue] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    const urls: URL = {\r\n      '/': 0,\r\n      '/prestudy': 1,\r\n      '/weights': 2,\r\n      '/statistics': 3\r\n    }\r\n    setValue(urls[location.pathname] || 0)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Link\r\n          to='/'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Strona główna\" />\r\n        </Link>\r\n        <Link\r\n          to='/prestudy'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Wybór kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/weights'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Istotność kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/statistics'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Statystyki\" />\r\n        </Link>\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import Menu from './Menu';\r\n\r\nexport default Menu","import Layout from './Layout'\r\n\r\nexport default Layout","import React, { ReactChildren, ReactChild } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Menu from '../Menu';\r\n\r\ninterface LayoutChildren {\r\n    children: ReactChildren | ReactChild\r\n}\r\n\r\nexport default function Layout({ children }: LayoutChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{backgroundColor: '#dcdcdc', width: '100%', height: '100vh'}}>\r\n            <Menu />\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import MyContainer from './MyContainer';\r\n\r\nexport default MyContainer;","import React, { ReactChildren, ReactChild, ReactFragment } from 'react'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\ninterface ContainerChildren {\r\n    children: ReactChildren | ReactChild | ReactChildren[] | ReactChild[] | ReactFragment\r\n}\r\n\r\n\r\nexport default function MyContainer({ children }: ContainerChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{width: '100%', height: '90%', overflow: 'auto'}}>\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\n\r\nimport MyContainer from '../MyContainer'\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <MyContainer>\r\n            Dashboard\r\n        </MyContainer>\r\n    )\r\n}\r\n","import CriteriaSelection from './CriteriaSelection'\r\n\r\nexport default CriteriaSelection","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    FormControl,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    TextField,\r\n    Typography,\r\n    Grid,\r\n    Button\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n    description: string\r\n    status: boolean\r\n}\r\n\r\n// const SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\nconst SERVER_URL = 'http://localhost:5000'\r\n\r\nexport default function CriteriaSelection() {\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n    const [name, setName] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            const obj = { ...crit, status: false}\r\n            return obj\r\n        }))\r\n    }, [])\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: number) => {\r\n        setCriteria(criteria.map(crit => crit.id === id ? {...crit, status: !crit.status } : crit))\r\n    };\r\n\r\n    const handleSubmit = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.preventDefault();\r\n        if (name === '') {\r\n            window.alert('Pole \"imię\" musi być wypełnione');\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            name,\r\n            ...criteria.map(crit => ({ id: crit.id, status: crit.status}))\r\n        }\r\n\r\n        axios.post(`${SERVER_URL}/add-prestudy`, body)\r\n            .then((res) => {\r\n                window.alert(`Dane zostały ${res.status === 201 ? 'zapisane': 'zaktualizowane'}`)\r\n            })\r\n            .catch((err: Error) => {\r\n                window.alert('Wystąpił błąd przy zapisywaniu danych')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MyContainer>\r\n            <Typography variant='h5' style={{margin: '50px 10%'}}>{criteriaAll.description}</Typography>\r\n             <FormControl component=\"fieldset\" style={{padding: '40px', width: '100%'}}>\r\n                <FormGroup style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', width: '100%'}}>\r\n                    <TextField variant=\"outlined\" label=\"Imię\" onChange={handleInputChange} style={{ marginBottom: '20px'}}/>\r\n                    {\r\n                        criteria?.map(crit => {\r\n                            return (\r\n                                <Grid container style={{ margin: '10px 0'}} key={crit.id}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={crit.status} onChange={(e) => handleChange(e, crit.id)} name={crit.name} color={'primary'}/>\r\n                                        }\r\n                                        label={crit.name}\r\n                                        style={{width: '100%'}}\r\n                                    />\r\n                                    <Typography variant='body2' style={{color: '#494949'}}>{crit.description}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </FormGroup>\r\n                <Button\r\n                    variant='contained'\r\n                    size='medium'\r\n                    color='primary'\r\n                    style={{marginTop: '20px', padding: '10px 5px'}}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    PRZEŚLIJ\r\n                </Button>\r\n            </FormControl>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import Weights from './Weights'\r\n\r\nexport default Weights","import React from 'react'\r\n\r\nexport default function Weights() {\r\n    return (\r\n        <div>\r\n            Tu wkrótce pojawi się nowy formularz\r\n        </div>\r\n    )\r\n}\r\n","import Statistics from './Statistics'\r\n\r\nexport default Statistics","import React, { useState, useEffect } from 'react'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    Typography,\r\n    Grid\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface Criterion {\r\n    id: number\r\n    status: boolean\r\n}\r\n\r\ninterface CriteriaResults {\r\n    _id: string\r\n    data: Criterion[]\r\n    name: string\r\n}\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\nconst SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\n// const SERVER_URL = 'http://localhost:5000'\r\n\r\n\r\nexport default function Statistics() {\r\n    const [results, setResults] = useState<{} | any>({});\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n\r\n    const countVotes = (data: CriteriaResults[] | []) => {\r\n        const counter: { [name: string]: number} = {};\r\n        data.forEach(d => {\r\n            for (const [key, crit] of Object.entries(d.data)) {\r\n                if (key === 'name') continue\r\n\r\n                if (Object.keys(counter).includes(key)) {\r\n                    counter[key] += crit.status === true ? 1 : 0\r\n                } else {\r\n                    counter[key] = crit.status === true ? 1 : 0\r\n                }\r\n            }\r\n        })\r\n        return counter\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            return { id: crit.id, name: crit.name }\r\n        }))\r\n\r\n        axios.get(`${SERVER_URL}/criteria-selection`)\r\n        .then((res: AxiosResponse) => {\r\n            setResults(countVotes(res.data))\r\n        })\r\n        .catch((err: Error) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <MyContainer>\r\n            <Grid style={{width: '100%', display: 'flex', justifyContent: 'center', paddingTop: '10px'}}>\r\n                <Typography variant='h5'>Wyniki wyboru kryteriów</Typography>\r\n            </Grid>\r\n            <Grid style={{display: 'flex', flexDirection: 'column', width: '100%', padding: \"2% 10%\"}}>\r\n                {\r\n                    criteria?.map(crit => {\r\n                        return (\r\n                            <Grid style={{display: 'flex', width: '100%', justifyContent: 'center', padding: \"2px 0\"}}>\r\n                                <Typography style={{width: '30%'}}>{crit.name}</Typography>\r\n                                <Typography>{results[crit.id]}</Typography>\r\n                            </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout';\r\nimport Dashboard from './components/Dashboard';\r\nimport CriteriaSelection from './components/CriteriaSelection';\r\nimport Weights from './components/Weights';\r\nimport Statistics from './components/Statistics';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/' exact component={Dashboard} />\r\n          <Route path='/prestudy' component={CriteriaSelection} />\r\n          <Route path='/weights' component={Weights} />\r\n          <Route path='/statistics' component={Statistics} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}