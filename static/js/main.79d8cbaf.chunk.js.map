{"version":3,"sources":["components/Menu/Menu.tsx","components/Menu/index.tsx","components/Layout/index.tsx","components/Layout/Layout.tsx","components/MyContainer/index.tsx","components/MyContainer/MyContainer.tsx","components/Dashboard/index.tsx","components/Dashboard/Dashboard.tsx","components/CriteriaSelection/index.tsx","components/CriteriaSelection/CriteriaSelection.tsx","subscribers/FPS.js","subscribers/weights.js","components/Weights/Methods/FPS/FPS.tsx","components/Weights/Methods/FPS/index.tsx","subscribers/RM.js","components/Weights/Methods/RM/RM.tsx","components/Weights/Methods/RM/index.tsx","subscribers/SMART.js","components/Weights/Methods/SMART/SMART.tsx","components/Weights/Methods/SMART/index.tsx","subscribers/RWM.js","components/Weights/Methods/RWM/RWM.tsx","components/Weights/Methods/RWM/index.tsx","subscribers/AHP.js","components/Weights/Methods/AHP/Matrix/index.tsx","components/Weights/Methods/AHP/Matrix/Matrix.tsx","components/Weights/Methods/AHP/AHP.tsx","components/Weights/Methods/AHP/index.tsx","components/Weights/Rating/index.tsx","components/Weights/Rating/Rating.tsx","components/Weights/Modal/Modal.tsx","components/Weights/Modal/index.tsx","components/Weights/Weights.tsx","components/Weights/index.tsx","components/Statistics/index.tsx","components/Statistics/Statistics.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","root","flexGrow","Menu","classes","location","useLocation","useState","value","setValue","useEffect","pathname","Paper","className","Tabs","indicatorColor","textColor","centered","to","style","textDecoration","color","Tab","label","Layout","children","Container","maxWidth","backgroundColor","width","height","MyContainer","overflow","Dashboard","CriteriaSelection","criteria","setCriteria","name","setName","criteriaAll","map","crit","status","Typography","variant","margin","description","FormControl","component","padding","FormGroup","display","flexDirection","justifyContent","TextField","onChange","event","target","marginBottom","Grid","container","FormControlLabel","control","Checkbox","checked","e","id","Button","size","marginTop","onClick","preventDefault","body","axios","post","then","res","window","alert","catch","err","Store","createStore","initialState","weights","Array","fill","sum","actions","changeWeights","index","setState","getState","copy","calculateSum","reduce","s","val","parseInt","validateInput","some","weight","useFPS","createHook","activeStep","methodsRatings","weightsCorrect","modalVisible","message","nextStep","prevStep","changeRatings","changeWeightsCorrectness","setModalVisibility","state","postFormData","data","a","messsage","useWeightsState","WEIGHTS_MESSAGE","FPS","setMessage","Box","Object","keys","key","alignItems","paddingRight","type","onChangeWeight","borderTop","fontWeight","targetSum","length","Set","useRM","RM","useSMART","SMART","useRWM","RWM","Matrix","criteriaAmount","matrix","TableContainer","Table","minWidth","TableHead","TableRow","TableCell","col","TableBody","row","index2","toFixed","initialMatrix","i","initialPairs","j","push","pairs","compareValue","currentPair","betterCriterion","comparePair","setCompareValue","setBetterCriterion","criterion","useAHP","WEIGHTS_DICT","AHP","borderRight","marginRight","Select","MenuItem","borderLeft","idx","Rating","activeIndex","ratings","setRating","newRating","position","top","left","transform","bgcolor","border","boxShadow","p","Modal","handleClose","open","onClose","sx","mt","methods","weightsDescription","Weights","fps","rm","smart","rwm","ahp","paddingTop","Stepper","method","Step","StepLabel","disabled","flex","Statistics","results","setResults","get","counter","forEach","d","entries","includes","countVotes","console","log","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d8cbaf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface URL {\r\n  [index: string]: number\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function Menu() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [value, setValue] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    const urls: URL = {\r\n      '/': 0,\r\n      '/prestudy': 1,\r\n      '/weights': 2,\r\n      '/statistics': 3\r\n    }\r\n    setValue(urls[location.pathname] || 0)\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Link\r\n          to='/'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Strona główna\" />\r\n        </Link>\r\n        <Link\r\n          to='/prestudy'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Wybór kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/weights'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Istotność kryteriów\" />\r\n        </Link>\r\n        <Link\r\n          to='/statistics'\r\n          style={{textDecoration: 'none', color: 'inherit'}}\r\n        >\r\n            <Tab label=\"Statystyki\" />\r\n        </Link>\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import Menu from './Menu';\r\n\r\nexport default Menu","import Layout from './Layout'\r\n\r\nexport default Layout","import React, { ReactChildren, ReactChild } from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Menu from '../Menu';\r\n\r\ninterface LayoutChildren {\r\n    children: ReactChildren | ReactChild\r\n}\r\n\r\nexport default function Layout({ children }: LayoutChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{backgroundColor: '#dcdcdc', width: '100%', height: '100vh'}}>\r\n            <Menu />\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import MyContainer from './MyContainer';\r\n\r\nexport default MyContainer;","import React, { ReactChildren, ReactChild, ReactFragment } from 'react'\r\n\r\nimport { Container } from '@material-ui/core'\r\n\r\ninterface ContainerChildren {\r\n    children: ReactChildren | ReactChild | ReactChildren[] | ReactChild[] | ReactFragment\r\n}\r\n\r\n\r\nexport default function MyContainer({ children }: ContainerChildren) {\r\n    return (\r\n        <Container maxWidth='lg' style={{width: '100%', height: '90%', overflow: 'auto'}}>\r\n            { children }\r\n        </Container>\r\n    )\r\n}\r\n","import Dashboard from './Dashboard'\r\n\r\nexport default Dashboard","import React from 'react'\r\n\r\nimport MyContainer from '../MyContainer'\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <MyContainer>\r\n            Dashboard\r\n        </MyContainer>\r\n    )\r\n}\r\n","import CriteriaSelection from './CriteriaSelection'\r\n\r\nexport default CriteriaSelection","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    FormControl,\r\n    FormGroup,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    TextField,\r\n    Typography,\r\n    Grid,\r\n    Button\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n    description: string\r\n    status: boolean\r\n}\r\n\r\nconst SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\n// const SERVER_URL = 'http://localhost:5000'\r\n\r\nexport default function CriteriaSelection() {\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n    const [name, setName] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            const obj = { ...crit, status: false}\r\n            return obj\r\n        }))\r\n    }, [])\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, id: number) => {\r\n        setCriteria(criteria.map(crit => crit.id === id ? {...crit, status: !crit.status } : crit))\r\n    };\r\n\r\n    const handleSubmit = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.preventDefault();\r\n        if (name === '') {\r\n            window.alert('Pole \"imię\" musi być wypełnione');\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            name,\r\n            ...criteria.map(crit => ({ id: crit.id, status: crit.status}))\r\n        }\r\n\r\n        axios.post(`${SERVER_URL}/add-prestudy`, body)\r\n            .then((res) => {\r\n                window.alert(`Dane zostały ${res.status === 201 ? 'zapisane': 'zaktualizowane'}`)\r\n            })\r\n            .catch((err: Error) => {\r\n                window.alert('Wystąpił błąd przy zapisywaniu danych')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MyContainer>\r\n            <Typography variant='h5' style={{margin: '50px 10%'}}>{criteriaAll.description}</Typography>\r\n             <FormControl component=\"fieldset\" style={{padding: '40px', width: '100%'}}>\r\n                <FormGroup style={{display: 'flex', flexDirection: 'row', justifyContent: 'center', width: '100%'}}>\r\n                    <TextField variant=\"outlined\" label=\"Imię\" onChange={handleInputChange} style={{ marginBottom: '20px'}}/>\r\n                    {\r\n                        criteria?.map(crit => {\r\n                            return (\r\n                                <Grid container style={{ margin: '10px 0'}} key={crit.id}>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={crit.status} onChange={(e) => handleChange(e, crit.id)} name={crit.name} color={'primary'}/>\r\n                                        }\r\n                                        label={crit.name}\r\n                                        style={{width: '100%'}}\r\n                                    />\r\n                                    <Typography variant='body2' style={{color: '#494949'}}>{crit.description}</Typography>\r\n                                </Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </FormGroup>\r\n                <Button\r\n                    variant='contained'\r\n                    size='medium'\r\n                    color='primary'\r\n                    style={{marginTop: '20px', padding: '10px 5px'}}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    PRZEŚLIJ\r\n                </Button>\r\n            </FormControl>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n    sum: 0,\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    calculateSum:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        const sum = getState().weights.reduce((s, val) => parseInt(s + val));\r\n        setState({\r\n          sum: sum,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 4;\r\n        if (getState().weights.some((weight) => weight < 0)) return 3;\r\n\r\n        // 0 - equal 100\r\n        // 1 - too low\r\n        // 2 - too much\r\n        return getState().sum === 100 ? 0 : getState().sum < 100 ? 1 : 2;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"FPS\",\r\n});\r\n\r\nexport const useFPS = createHook(Store);\r\n","import { createStore, createHook } from \"react-sweet-state\";\r\nimport axios from \"axios\";\r\n\r\nconst SERVER_URL = \"https://infinite-dusk-14350.herokuapp.com\";\r\n// const SERVER_URL = \"http://localhost:5000\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    activeStep: 0,\r\n    methodsRatings: Array(5).fill(0),\r\n    weightsCorrect: Array(5).fill(false),\r\n    name: \"\",\r\n    modalVisible: false,\r\n    message: \"\",\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    nextStep:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        setState({\r\n          activeStep: getState().activeStep + 1,\r\n        });\r\n      },\r\n    prevStep:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        if (getState().activeStep === 0) return;\r\n        setState({\r\n          activeStep: getState().activeStep - 1,\r\n        });\r\n      },\r\n    changeRatings:\r\n      (value) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().methodsRatings];\r\n        copy[getState().activeStep] = value;\r\n        setState({\r\n          methodsRatings: copy,\r\n        });\r\n      },\r\n    changeWeightsCorrectness:\r\n      (status) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weightsCorrect];\r\n        copy[getState().activeStep] = status === 0 ? true : false;\r\n\r\n        setState({\r\n          weightsCorrect: copy,\r\n        });\r\n      },\r\n    setName:\r\n      (name) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          name: name,\r\n        });\r\n      },\r\n    setModalVisibility:\r\n      (state) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          modalVisible: state,\r\n        });\r\n      },\r\n    postFormData:\r\n      (data) =>\r\n      async ({ setState, getState }) => {\r\n        const body = {\r\n          ...data,\r\n          name: getState().name,\r\n        };\r\n\r\n        axios\r\n          .post(`${SERVER_URL}/weights`, body)\r\n          .then((res) => {\r\n            setState({\r\n              messsage: `Dane zostały ${\r\n                res.status === 201 ? \"zapisane\" : \"zaktualizowane\"\r\n              }`,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            setState({\r\n              messsage: \"Wystąpił błąd przy zapisywaniu danych\",\r\n            });\r\n          });\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"weights\",\r\n});\r\n\r\nexport const useWeightsState = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useFPS } from '../../../../subscribers/FPS'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Suma punktów jest poprawna',\r\n    1: 'Suma punktów jest mniejsza niż 100',\r\n    2: 'Suma punktów jest większa niż 100',\r\n    3: 'Nie można przypisać ujemnych punktów do kryterium',\r\n    4: ''\r\n}\r\n\r\nexport default function FPS({ criteria, description }: Props) {\r\n    const [{ weights, sum }, { changeWeights, calculateSum, validateInput }] = useFPS()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        calculateSum()\r\n\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                        <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', marginTop: '20px', borderTop: '2px solid grey'}}>Suma wag: {sum} </Typography>\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import FPS from './FPS';\r\n\r\nexport default FPS;","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n    targetSum: 55,\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 3;\r\n\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 1;\r\n\r\n        const sum = getState().weights.reduce((s, val) => parseInt(s + val));\r\n        return sum === getState().targetSum ? 0 : 2;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"RM\",\r\n});\r\n\r\nexport const useRM = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useRM } from '../../../../subscribers/RM'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Ranking jest zdefiniowany poprawnie',\r\n    1: 'Ranking nie może zawierać pozycji remisowych',\r\n    2: 'Ranking powinien być zdefiniowany za pomocą kolejnych liczb od 1 do 10 i nie pomijać żadnych wartości',\r\n    3: ''\r\n}\r\n\r\nexport default function RM({ criteria, description }: Props) {\r\n    const [{ weights }, { changeWeights, validateInput }] = useRM()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n                <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: validateInput() ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import RM from './RM';\r\n\r\nexport default RM","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 3;\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 2;\r\n        if (getState().weights.some((weight) => weight < 10)) return 1;\r\n\r\n        return 0;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"SMART\",\r\n});\r\n\r\nexport const useSMART = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useSMART } from '../../../../subscribers/SMART'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Wagi są zdefiniowane poprawnie',\r\n    1: 'Najmniejsza wartość powinna wynosić 10',\r\n    2: 'Wagi nie powinny sie powtarzać',\r\n    3: ''\r\n}\r\n\r\nexport default function SMART({ criteria, description }: Props) {\r\n    const [{ weights }, { changeWeights, validateInput } ] = useSMART()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            <Typography style={{padding: '10px 0'}}>{message}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n              return (\r\n                <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n","import SMART from './SMART';\r\n\r\nexport default SMART","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    weights: Array(10).fill(0),\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    changeWeights:\r\n      (value, index) =>\r\n      ({ setState, getState }) => {\r\n        let copy = [...getState().weights];\r\n        copy[index] = +value;\r\n\r\n        setState({\r\n          weights: copy,\r\n        });\r\n      },\r\n    validateInput:\r\n      () =>\r\n      ({ getState }) => {\r\n        if (getState().weights.some((weight) => weight === 0)) return 4;\r\n        if (getState().weights.length !== new Set(getState().weights).size)\r\n          return 3;\r\n        if (getState().weights.some((weight) => weight % 10 !== 0)) return 2;\r\n        if (getState().weights.some((weight) => weight < 10)) return 1;\r\n\r\n        return 0;\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"RWM\",\r\n});\r\n\r\nexport const useRWM = createHook(Store);\r\n","import react, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    TextField\r\n} from '@material-ui/core';\r\n\r\nimport { useRWM } from '../../../../subscribers/RWM'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Wagi są zdefiniowane poprawnie',\r\n    1: 'Najmniejsza wartość powinna wynosić 10',\r\n    2: 'Wagi powininy być zdefiniowane za pomocą kolejnych wielokrotności 10',\r\n    3: 'Wagi nie powinny sie powtarzać',\r\n    4: '',\r\n}\r\n\r\nexport default function RWM({ criteria, description }: Props) {\r\n    const [{ weights }, {changeWeights, validateInput }] = useRWM()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        const status = validateInput()\r\n        setMessage(WEIGHTS_MESSAGE[status])\r\n        changeWeightsCorrectness(status)\r\n    }, [weights])\r\n\r\n    const onChangeWeight = (e: react.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, index: number) => {\r\n        changeWeights(e.target.value, index)\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            <Typography style={{padding: '10px 0'}}>{message}</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n              return (\r\n                <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                    <Typography style={{width: '70%', paddingRight: '20px'}}>{criteria[parseInt(key)].name}</Typography>\r\n                    <TextField\r\n                      type=\"number\"\r\n                      variant=\"outlined\"\r\n                      style={{width: '100px'}}\r\n                      value={weights[index] || ''}\r\n                      onChange={(e) => onChangeWeight(e, index)}\r\n                    />\r\n                </Box>\r\n              )\r\n            })}\r\n        </Box>\r\n    )\r\n}\r\n","import RWM from './RWM';\r\n\r\nexport default RWM","import { createStore, createHook } from \"react-sweet-state\";\r\n\r\nconst initialMatrix = Array(10)\r\n  .fill(0)\r\n  .map(() => new Array(10).fill(0));\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  initialMatrix[i][i] = 1;\r\n}\r\n\r\nconst initialPairs = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  for (let j = 0; j < 10; j++) {\r\n    if (j > i) {\r\n      initialPairs.push([i, j]);\r\n    }\r\n  }\r\n}\r\n\r\nconst Store = createStore({\r\n  // value of the store on initialisation\r\n  initialState: {\r\n    criteriaAmount: 10,\r\n    matrix: initialMatrix,\r\n    pairs: initialPairs,\r\n    compareValue: \"\",\r\n    currentPair: 0,\r\n    betterCriterion: \"\",\r\n  },\r\n  // actions that trigger store mutation\r\n  actions: {\r\n    comparePair:\r\n      () =>\r\n      ({ setState, getState }) => {\r\n        const value =\r\n          +getState().betterCriterion === 0\r\n            ? getState().compareValue\r\n            : 1 / getState().compareValue;\r\n\r\n        let copy = [...getState().matrix];\r\n        copy[getState().pairs[getState().currentPair][0]][\r\n          getState().pairs[getState().currentPair][1]\r\n        ] = value;\r\n        copy[getState().pairs[getState().currentPair][1]][\r\n          getState().pairs[getState().currentPair][0]\r\n        ] = 1 / value.toFixed(3);\r\n\r\n        setState({\r\n          matrix: copy,\r\n          currentPair: getState().currentPair + 1,\r\n          compareValue: \"\",\r\n          betterCriterion: \"\",\r\n        });\r\n      },\r\n    setCompareValue:\r\n      (value) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          compareValue: value,\r\n        });\r\n      },\r\n    setBetterCriterion:\r\n      (criterion) =>\r\n      ({ setState }) => {\r\n        setState({\r\n          betterCriterion: criterion,\r\n        });\r\n      },\r\n  },\r\n  // optional, mostly used for easy debugging\r\n  name: \"AHP\",\r\n});\r\n\r\nexport const useAHP = createHook(Store);\r\n","import Matrix from './Matrix'\r\n\r\nexport default Matrix","import * as React from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper\r\n} from '@material-ui/core';\r\n\r\ninterface props {\r\n  criteriaAmount: number\r\n  matrix: number[][]\r\n}\r\n\r\nexport default function Matrix({criteriaAmount, matrix}: props) {\r\n  return (\r\n    <TableContainer component={Paper} style={{margin: '2% 0'}}>\r\n      <Table style={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Kryteria</TableCell>\r\n            {Array(criteriaAmount).fill(0).map((col, index) => (\r\n              <TableCell component=\"th\" key={index}>\r\n                C{index+1}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Array(criteriaAmount).fill(0).map((row, index) => (\r\n            <TableRow\r\n              key={index}\r\n            >\r\n              <TableCell>\r\n                C{index+1}\r\n              </TableCell>\r\n              {Array(criteriaAmount).fill(0).map((col, index2) => (\r\n                <TableCell component=\"th\" key={index+index2}>\r\n                  {matrix[index][index2].toFixed(2)}\r\n                </TableCell>\r\n              ))}\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import react, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    MenuItem,\r\n    FormControl\r\n} from '@material-ui/core';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nimport Matrix from './Matrix'\r\nimport { useAHP } from '../../../../subscribers/AHP'\r\nimport { useWeightsState } from '../../../../subscribers/weights'\r\n\r\ninterface DICT {\r\n    [key: number]: string\r\n}\r\n\r\ninterface Criteria {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ninterface Props {\r\n    criteria: Criteria[]\r\n    description: string\r\n}\r\n\r\nconst WEIGHTS_MESSAGE = {\r\n    0: 'Można porównać parę',\r\n    1: 'Ważniejsze kryterium powinno być wybrane',\r\n    2: 'Relacja pomiędzy kryteriami powinna być wybrana',\r\n    3: ''\r\n}\r\n\r\nconst WEIGHTS_DICT: DICT = {\r\n    1: 'Równoważne',\r\n    2: 'Pomiędzy słabo a równoważne',\r\n    3: 'Słabo preferowane',\r\n    4: 'Pomiędzy słabo a silnie',\r\n    5: 'Silnie preferowane',\r\n    6: 'Pomiędzy silnie a bardzo silnie',\r\n    7: 'Bardzo silnie preferowane',\r\n    8: 'Pomiędzy bardzo silnie a ekstremalnie',\r\n    9: 'Ekstremalnie preferowane'\r\n}\r\n\r\nexport default function AHP({ criteria, description }: Props) {\r\n    const [{ criteriaAmount, matrix, pairs, compareValue, currentPair, betterCriterion }, { comparePair, setCompareValue, setBetterCriterion }] = useAHP()\r\n    const [, { changeWeightsCorrectness }] = useWeightsState()\r\n    const [message, setMessage] = useState<string>('')\r\n\r\n    const handlePairComparison = (e: React.MouseEvent<HTMLElement>) => {\r\n        e.preventDefault()\r\n\r\n        if (compareValue === \"\") {\r\n            setMessage(WEIGHTS_MESSAGE[2])\r\n            return\r\n        }\r\n\r\n        comparePair()\r\n        if (currentPair === 44) {\r\n            changeWeightsCorrectness(0)\r\n        }\r\n        setMessage(WEIGHTS_MESSAGE[3])\r\n    }\r\n\r\n    const handleCriteriaChange = (event: SelectChangeEvent) => {\r\n        setMessage(WEIGHTS_MESSAGE[3])\r\n        setBetterCriterion(+event.target.value);\r\n    };\r\n\r\n    const handleValueChange = (event: SelectChangeEvent) => {\r\n        if (betterCriterion === \"\") {\r\n            setMessage(WEIGHTS_MESSAGE[1])\r\n            return\r\n        }\r\n        setMessage(WEIGHTS_MESSAGE[0])\r\n        setCompareValue(+event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Box style={{padding: '20px 0'}}>\r\n            <Typography style={{padding: '10px 0'}}>{description}</Typography>\r\n            <Typography style={{padding: '10px 0'}}>Kryteria</Typography>\r\n            {Object.keys(criteria).map((key, index) => {\r\n                return (\r\n                    <Box style={{display: 'flex', alignItems: 'center', width: '100%'}} key={index}>\r\n                        <Typography style={{width: '70%', paddingRight: '20px'}}>C{index+1} - {criteria[parseInt(key)].name}</Typography>\r\n                    </Box>\r\n                )\r\n            })}\r\n            <Matrix\r\n              criteriaAmount={criteriaAmount}\r\n              matrix={matrix}\r\n            />\r\n            {\r\n                currentPair !== 45 &&\r\n                (<Box style={{display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%'}}>\r\n                    <Typography style={{paddingRight: '20px', borderRight: '2px solid grey'}}>C{pairs[currentPair][0]+1} i C{pairs[currentPair][1]+1}</Typography>\r\n                    <Typography style={{padding: '0 20px'}}>Ważniejsze kryterium</Typography>\r\n                    <FormControl style={{width: '100px', marginRight: '10px'}}>\r\n                        <Select\r\n                            id=\"criteria-AHP-value\"\r\n                            value={betterCriterion}\r\n                            onChange={handleCriteriaChange}\r\n                        >\r\n                            <MenuItem value={0}>C{pairs[currentPair][0]+1}</MenuItem>\r\n                            <MenuItem value={1}>C{pairs[currentPair][1]+1}</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Typography style={{padding: '0 20px', borderLeft: '2px solid grey'}}>Relacja</Typography>\r\n                    <FormControl style={{width: '200px'}}>\r\n                        <Select\r\n                            id=\"criteria-AHP-value\"\r\n                            value={compareValue}\r\n                            onChange={handleValueChange}\r\n                        >\r\n                            {\r\n                                Object.keys(WEIGHTS_DICT).map((key: string, idx: number) => {\r\n                                    return (\r\n                                        <MenuItem key={idx} value={+key}>{WEIGHTS_DICT[+key]}</MenuItem>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                    </FormControl>\r\n                    <Button\r\n                        variant='contained'\r\n                        size='medium'\r\n                        color='primary'\r\n                        style={{margin: '0 10px', padding: '10px 5px'}}\r\n                        onClick={handlePairComparison}\r\n                    >\r\n                        DALEJ\r\n                    </Button>\r\n                </Box>)\r\n            }\r\n            <Typography style={{padding: '10px 0', fontWeight: 'bold', color: (betterCriterion === \"\" || compareValue === \"\") ? 'red' : 'inherit'}}>{message}</Typography>\r\n        </Box>\r\n    )\r\n}\r\n","import AHP from './AHP';\r\n\r\nexport default AHP","import Rating from './Rating';\r\n\r\nexport default Rating","import react, { Dispatch, SetStateAction } from 'react';\r\nimport {\r\n    Box,\r\n    Rating,\r\n    Typography\r\n } from '@mui/material';\r\n\r\ninterface Props {\r\n    activeIndex: number\r\n    ratings: number[]\r\n    setRating: Dispatch<SetStateAction<number>>\r\n}\r\n\r\nexport default function MyRating({ activeIndex, ratings, setRating }: Props) {\r\n\r\n  const handleChange = (event: react.SyntheticEvent<Element, Event>, newRating: number | null) => {\r\n    event.preventDefault();\r\n\r\n    if (!newRating) return\r\n\r\n    setRating(newRating)\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography component=\"legend\">Ocena trudności korzystania z metody</Typography>\r\n      <Typography>1 gwiazdka - trudna, 5 gwiazdek - łatwa</Typography>\r\n      <Rating\r\n        name=\"method-rating\"\r\n        value={ratings[activeIndex]}\r\n        onChange={handleChange}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import react, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport { useWeightsState } from '../../../subscribers/weights'\r\n\r\nconst style = {\r\n  position: 'absolute' as 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\ninterface Props {\r\n  description: string\r\n}\r\n\r\nexport default function BasicModal({ description }: Props) {\r\n  const [{ modalVisible, name }, { setModalVisibility, setName }] = useWeightsState()\r\n  const [message, setMessage] = useState<string>('')\r\n\r\n  const handleClose = () => {\r\n    if (name === '') {\r\n      setMessage('Należy uzupełnić imię')\r\n      return\r\n    }\r\n    setModalVisibility(false);\r\n  }\r\n\r\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setName(event.target.value)\r\n      setMessage('')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={modalVisible}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Wstęp przed wypełnieniem formularza\r\n          </Typography>\r\n          <Typography style={{ marginTop: '10px', color: 'red' }}>{message}</Typography>\r\n          <TextField variant=\"outlined\" label=\"Imię\" onChange={handleInputChange} style={{ marginBottom: '20px'}}/>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {description}\r\n          </Typography>\r\n          <Button style={{ marginTop: '10px'}} onClick={handleClose}>\r\n            Zamknij\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import Modal from './Modal'\r\n\r\nexport default Modal","import react, { useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    Button,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\nimport FPS from './Methods/FPS'\r\nimport RM from './Methods/RM'\r\nimport SMART from './Methods/SMART'\r\nimport RWM from './Methods/RWM'\r\nimport AHP from './Methods/AHP'\r\nimport Rating from './Rating'\r\nimport Modal from './Modal'\r\n\r\nimport { useWeightsState } from '../../subscribers/weights';\r\nimport { useFPS } from '../../subscribers/FPS';\r\nimport { useRM } from '../../subscribers/RM';\r\nimport { useSMART } from '../../subscribers/SMART';\r\nimport { useRWM } from '../../subscribers/RWM';\r\nimport { useAHP } from '../../subscribers/AHP';\r\nimport weightsDescription from '../../weights_description.json'\r\n\r\ninterface methodsComponents {\r\n  [key: number]: JSX.Element\r\n}\r\n\r\nconst methods: methodsComponents = {\r\n  0: <FPS criteria={weightsDescription.criteria} description={weightsDescription.methods[0].description}/>,\r\n  1: <RM criteria={weightsDescription.criteria} description={weightsDescription.methods[1].description}/>,\r\n  2: <SMART criteria={weightsDescription.criteria} description={weightsDescription.methods[2].description}/>,\r\n  3: <RWM criteria={weightsDescription.criteria} description={weightsDescription.methods[3].description}/>,\r\n  4: <AHP criteria={weightsDescription.criteria} description={weightsDescription.methods[4].description}/>\r\n}\r\n\r\nexport default function Weights() {\r\n  const [{ activeStep, methodsRatings, weightsCorrect, message }, { nextStep, prevStep, changeRatings, setModalVisibility, postFormData }] = useWeightsState()\r\n\r\n  const [fps, ] = useFPS()\r\n  const [rm, ] = useRM()\r\n  const [smart, ] = useSMART()\r\n  const [rwm, ] = useRWM()\r\n  const [ahp, ] = useAHP()\r\n\r\n  useEffect(() => {\r\n    setModalVisibility(true)\r\n  }, [])\r\n\r\n  const handleNext = () => {\r\n    if (methodsRatings[activeStep] === 0 || !weightsCorrect[activeStep]) return\r\n    nextStep()\r\n\r\n    if (activeStep === weightsDescription.methods.length - 1) {\r\n\r\n      const body = {\r\n        'fps': fps.weights,\r\n        'rm': rm.weights,\r\n        'smart': smart.weights,\r\n        'rwm': rwm.weights,\r\n        'ahp': ahp.matrix,\r\n        'rating': methodsRatings\r\n      }\r\n\r\n      postFormData(body)\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    prevStep()\r\n  };\r\n\r\n  return (\r\n    <Box style={{ width: '100%', height: '100%', paddingTop: '15px', overflow: 'auto' }}>\r\n      <Modal description={weightsDescription.description} />\r\n      <Stepper activeStep={activeStep}>\r\n        {weightsDescription.methods.map((method, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const labelProps: {\r\n            optional?: React.ReactNode;\r\n          } = {};\r\n          return (\r\n            <Step key={method.id} {...stepProps}>\r\n              <StepLabel {...labelProps}>{index+1}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      {activeStep === weightsDescription.methods.length ? (\r\n        <Box style={{ width: '60%', margin: '0 auto', paddingTop: '20px'}}>\r\n          <Typography>{message}</Typography>\r\n          <Typography style={{ marginTop: 2, marginBottom: 1 }}>\r\n            Wszystkie kroki wypełnione. Dziękuje Wam serdecznie za pomoc. Mam nadzieję,\r\n            że to wszystko, czego będę od Was potrzebował. Jeszcze raz dziękuję, jak obliczę wyniki\r\n            to na pewno się z Wami podzielę.\r\n          </Typography>\r\n        </Box>\r\n      ) : (\r\n        <Box style={{width: '90%', margin: '0 5%', marginBottom: '100px'}}>\r\n          {methods[activeStep]}\r\n          <Box style={{width: '100%', display: 'flex', justifyContent: 'center'}}>\r\n            <Rating\r\n              activeIndex={activeStep}\r\n              ratings={methodsRatings}\r\n              setRating={changeRatings}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            {\r\n              methodsRatings[activeStep] === 0 && !weightsCorrect[activeStep]\r\n                ? 'Należy wypełnić wagi i ocenić metodę'\r\n                : methodsRatings[activeStep] === 0\r\n                  ? 'Należy ocenić metodę'\r\n                  : !weightsCorrect[activeStep]\r\n                    ? 'Należy wypełnić wagi'\r\n                    : 'Można przejść do nastepnego kroku'\r\n            }\r\n            </Box>\r\n          <Box style={{ display: 'flex', flexDirection: 'row', paddingTop: 2 }}>\r\n            <Button\r\n              color=\"inherit\"\r\n              disabled={activeStep === 0}\r\n              onClick={handleBack}\r\n              style={{ marginRight: 1 }}\r\n            >\r\n              Wstecz\r\n            </Button>\r\n            <Box style={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleNext}>\r\n                {activeStep === weightsDescription.methods.length - 1 ? 'Prześlij' : 'Dalej'}\r\n              </Button>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import Weights from './Weights'\r\n\r\nexport default Weights","import Statistics from './Statistics'\r\n\r\nexport default Statistics","import React, { useState, useEffect } from 'react'\r\nimport axios, { AxiosResponse } from 'axios'\r\nimport MyContainer from '../MyContainer'\r\nimport {\r\n    Typography,\r\n    Grid\r\n} from '@material-ui/core/'\r\n\r\nimport criteriaAll from '../../criteria_description.json'\r\n\r\ninterface Criterion {\r\n    id: number\r\n    status: boolean\r\n}\r\n\r\ninterface CriteriaResults {\r\n    _id: string\r\n    data: Criterion[]\r\n    name: string\r\n}\r\n\r\ninterface CriteriaDescription {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\nconst SERVER_URL = 'https://infinite-dusk-14350.herokuapp.com'\r\n// const SERVER_URL = 'http://localhost:5000'\r\n\r\n\r\nexport default function Statistics() {\r\n    const [results, setResults] = useState<{} | any>({});\r\n    const [criteria, setCriteria] = useState<CriteriaDescription[] | []>([])\r\n\r\n    const countVotes = (data: CriteriaResults[] | []) => {\r\n        const counter: { [name: string]: number} = {};\r\n        data.forEach(d => {\r\n            for (const [key, crit] of Object.entries(d.data)) {\r\n                if (key === 'name') continue\r\n\r\n                if (Object.keys(counter).includes(key)) {\r\n                    counter[key] += crit.status === true ? 1 : 0\r\n                } else {\r\n                    counter[key] = crit.status === true ? 1 : 0\r\n                }\r\n            }\r\n        })\r\n        return counter\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCriteria(criteriaAll.criteria.map(crit => {\r\n            return { id: crit.id, name: crit.name }\r\n        }))\r\n\r\n        axios.get(`${SERVER_URL}/criteria-selection`)\r\n        .then((res: AxiosResponse) => {\r\n            setResults(countVotes(res.data))\r\n        })\r\n        .catch((err: Error) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <MyContainer>\r\n            <Grid style={{width: '100%', display: 'flex', justifyContent: 'center', paddingTop: '10px'}}>\r\n                <Typography variant='h5'>Wyniki wyboru kryteriów</Typography>\r\n            </Grid>\r\n            <Grid style={{display: 'flex', flexDirection: 'column', width: '100%', padding: \"2% 10%\"}}>\r\n                {\r\n                    criteria?.map(crit => {\r\n                        return (\r\n                            <Grid style={{display: 'flex', width: '100%', justifyContent: 'center', padding: \"2px 0\"}}>\r\n                                <Typography style={{width: '30%'}}>{crit.name}</Typography>\r\n                                <Typography>{results[crit.id]}</Typography>\r\n                            </Grid>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        </MyContainer>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Layout from './components/Layout';\r\nimport Dashboard from './components/Dashboard';\r\nimport CriteriaSelection from './components/CriteriaSelection';\r\nimport Weights from './components/Weights';\r\nimport Statistics from './components/Statistics';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Switch>\r\n          <Route path='/' exact component={Dashboard} />\r\n          <Route path='/prestudy' component={CriteriaSelection} />\r\n          <Route path='/weights' component={Weights} />\r\n          <Route path='/statistics' component={Statistics} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}